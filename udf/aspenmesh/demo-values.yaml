--- 
aspen-mesh-controlplane: 
  clusterId: demo
  userAuth: 
    type: none
aspen-mesh-metrics-collector:
  server:
    serviceResources:
      limits:
        cpu: 1000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 512Mi
aspen-mesh-secure-ingress: 
  enabled: true
  externalDnsEnabled: false
  lets-encrypt-email: ""
citadel: 
  enabled: true
external-dns: 
  enabled: false
gateways: 
  istio-egressgateway:
    name: istio-egressgateway
    autoscaleMax: 2
    autoscaleMin: 1
    enabled: true
    env: 
      ISTIO_META_REQUESTED_NETWORK_VIEW: external
  istio-ingressgateway:
    name: istio-ingressgateway
    autoscaleMax: 2
    autoscaleMin: 1
    enabled: true
    ports:
    - port: 15021
      targetPort: 15021
      name: status-port
    - port: 80
      targetPort: 8080
      name: http2
    - port: 443
      targetPort: 8443
      name: https
    - port: 15012
      targetPort: 15012
      name: tcp-istiod
    - port: 15443
      targetPort: 15443
      name: tls
    - port: 15017
      targetPort: 15017
      name: tls-webhook
global: # https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1/
  certificateCustomFields: true
  # enableTracing: true
  tracer:
    zipkin:
      address: aspen-mesh-jaeger-collector.istio-system:9411
  # proxy:
  #   logLevel: debug # --proxyLogLevel
  #   componentLogLevel: admin:info # --proxyComponentLogLevel
  #   logging:
  #     level: debug
  # logAsJson: true # --log_as_json   
jaeger: 
  enabled: true
meshConfig:
  # defaultConfig:
    # tracing:
    #   sampling: 10
    # proxyStatsMatcher:
      # inclusionRegexps: 
      #   - ".*"
      # inclusionPrefixes:
      #   - cluster.outbound
      #   - cluster.inbound
  enablePrometheusMerge: true
  # accessLogEncoding: TEXT
  # accessLogFormat: "{ \"authority\": \"%REQ(:AUTHORITY)%\", \"bytes_received\": %BYTES_RECEIVED%, \"bytes_sent\": %BYTES_SENT%, \"downstream_local_address\": \"%DOWNSTREAM_LOCAL_ADDRESS%\", \"downstream_peer_cert_v_end\": \"%DOWNSTREAM_PEER_CERT_V_END%\", \"downstream_peer_cert_v_start\": \"%DOWNSTREAM_PEER_CERT_V_START%\", \"downstream_remote_address\": \"%DOWNSTREAM_REMOTE_ADDRESS%\", \"downstream_tls_cipher\": \"%DOWNSTREAM_TLS_CIPHER%\", \"downstream_tls_version\": \"%DOWNSTREAM_TLS_VERSION%\", \"duration\": %DURATION%, \"hostname\": \"%HOSTNAME%\", \"istio_policy_status\": \"%DYNAMIC_METADATA(istio.mixer:status)%\", \"method\": \"%REQ(:METHOD)%\", \"path\": \"%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%\", \"protocol\": \"%PROTOCOL%\", \"request_duration\": %REQUEST_DURATION%, \"request_id\": \"%REQ(X-REQUEST-ID)%\", \"requested_server_name\": \"%REQUESTED_SERVER_NAME%\", \"response_code\": \"%RESPONSE_CODE%\", \"response_duration\": %RESPONSE_DURATION%, \"response_tx_duration\": %RESPONSE_TX_DURATION%, \"response_flags\": \"%RESPONSE_FLAGS%\", \"route_name\": \"%ROUTE_NAME%\", \"start_time\": \"%START_TIME%\", \"upstream_cluster\": \"%UPSTREAM_CLUSTER%\", \"upstream_host\": \"%UPSTREAM_HOST%\", \"upstream_local_address\": \"%UPSTREAM_LOCAL_ADDRESS%\", \"upstream_service_time\": %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%, \"upstream_transport_failure_reason\": \"%UPSTREAM_TRANSPORT_FAILURE_REASON%\", \"user_agent\": \"%REQ(USER-AGENT)%\", \"x_forwarded_for\": \"%REQ(X-FORWARDED-FOR)%\" } \n"
prometheus: 
  enabled: true
