apiVersion: apps/v1
kind: Deployment
metadata:
  name: fortio-client
  namespace: fortio
  labels:
    app: fortio-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fortio-client
  template:
    metadata:
      labels:
        app: fortio-client
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "15091"
        # ad.datadoghq.com/fortio.check_names: '["openmetrics"]'
        # ad.datadoghq.com/fortio.init_configs: '[{}]'
        # ad.datadoghq.com/fortio.instances: '[{"prometheus_url": "http://%%host%%:15090/stats/prometheus","namespace": "fortio-client","metrics": ["*"], "max_returned_metrics": 15000}]'
    spec:
      serviceAccountName: fortio-client
      containers:
        - name: fortio
          image: fortio/fortio:latest_release
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http-fortio
          volumeMounts:
            - name: fortio-client-storage
              mountPath: /var/lib/fortio
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
        - name: curl
          image: curlimages/curl
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1
          volumeMounts:
            - name: fortio-client-storage
              mountPath: /var/lib/fortio
          args: ["/bin/sleep", "infinity"]
          resources:
            limits:
              cpu: "0.2"
              memory: 128Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - fortio-client
            topologyKey: kubernetes.io/hostname
      volumes:
        - name: fortio-client-storage
          emptyDir: {}
